spring.application.name=jobdam_be
server.port=8080
# DB
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://jobdam.cbgscymc4lh9.ap-northeast-2.rds.amazonaws.com:3306/jobdam?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

mybatis.configuration.map-underscore-to-camel-case=true


# JWT
jwt.access-token.name=ACCESS_TOKEN
# 10\uBD84 (\uBC00\uB9AC\uCD08 \uB2E8\uC704)
jwt.access-token.expiry=600000
jwt.refresh-token.name=REFRESH_TOKEN
# 1\uC77C (\uBC00\uB9AC\uCD08 \uB2E8\uC704)
jwt.refresh-token.expiry=86400000

spring.jwt.secret=adSFHLIASDGaGHKLEDFLASdgASdGHKdsglrwhusdfArhgHAUESFAEFargHKJASL


# Mail Send - Gmail Setting
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ID}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.nickname=Jobdam

# OAuth2 Setting
# Naver registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${OAUTH_NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${OAUTH_NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

# Google registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id= ${OAUTH_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile, email

# Naver provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# AWS S3
spring.cloud.aws.credentials.access-key=${S3_ACCESS_KEY}
spring.cloud.aws.credentials.secret-key=${S3_SECRET_KEY}
spring.cloud.aws.region.static=${S3_REGION_STATIC}
spring.cloud.aws.s3.bucket=${S3_BUCKET}

# \uC774\uBBF8\uC9C0 \uD06C\uAE30 \uC124\uC815
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=10MB


logging.level.org.springframework.security=DEBUG