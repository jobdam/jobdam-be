<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jobdam.jobdam_be.interview.mapper.InterviewMapper">

    <resultMap id="InterviewResultMap" type="com.jobdam.jobdam_be.interview.model.Interview">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="interviewType" column="interview_type"/>
        <result property="interviewDay" column="interview_day"/>
        <result property="jobCode" column="job_code"/>
    </resultMap>

    <resultMap id="InterviewQuestionResultMap" type="com.jobdam.jobdam_be.interview.model.InterviewQuestion">
        <result property="id" column="id"/>
        <result property="interviewId" column="interview_id"/>
        <result property="context" column="context"/>
    </resultMap>

    <insert id="insertAiQuestions">
        INSERT INTO ai_resume_question (resume_id, question)
        VALUES
        <foreach collection="questions" item="q" separator=",">
            (#{q.resumeId}, #{q.question})
        </foreach>
    </insert>

    <update id="updateInterviewReports">
        UPDATE interview
        SET well_done  = #{wellDone},
            to_improve = #{toImprove}
        WHERE id = #{id}
    </update>

    <delete id="resetAiQuestion">
        DELETE
        FROM ai_resume_question
        WHERE resume_id = #{resumeID}
    </delete>

    <select id="findFeedbacksForSameInterview">
        SELECT fc.content
        FROM feedback_content AS fc
                 JOIN interview_question iq on iq.id = fc.interview_question_id
        WHERE iq.interview_id = #{interviewId}
    </select>

    <select id="findInterviewById" resultMap="InterviewResultMap">
        SELECT *
        FROM interview
        WHERE user_id = #{userId}
    </select>

    <select id="findFeedbackByInterviewIdAndUserId" resultType="java.util.Map">
        SELECT iq.id      AS questionId,
               iq.context AS question,
               fc.content AS feedback
        FROM interview_question iq
                 JOIN feedback_content fc ON fc.interview_question_id = iq.id
        WHERE iq.interview_id = #{interviewId}
          AND fc.target_user_id = #{userId}
        ORDER BY iq.id
    </select>
    
    <insert id="saveInterview" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO interview (user_id,interview_type,interview_day,job_code)
        VALUES(#{userId},#{interviewType},now(),#{jobCode});
    </insert>

    <insert id="copyAiToInterviewQuestions">
        INSERT INTO interview_question (interview_id, context)
        SELECT #{interviewId}, question
        FROM ai_resume_question
        WHERE resume_id = (SELECT id
                           FROM resume
                           WHERE user_id = #{userId}
        );
    </insert>

    <select id="findAllByInterviewId" resultMap="InterviewQuestionResultMap">
        SELECT id, interview_id, context
        FROM interview_question
        WHERE interview_id = #{interviewId}
    </select>

    <insert id="saveQuestion" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO interview_question (interview_id, context)
        VALUES(#{interviewId},#{context});
    </insert>

    <insert id="saveFeedBack">
        INSERT INTO feedback (target_user_id, content, interview_question_id)
        VALUES (#{targetUserId}, #{content}, #{interviewQuestionId});
    </insert>

</mapper>