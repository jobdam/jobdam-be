<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jobdam.jobdam_be.user.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.jobdam.jobdam_be.user.model.User">
        <result property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="birthday" column="birthday"/>
        <result property="targetCompanySize" column="target_company_size"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="blacklist" column="blacklist"/>
        <result property="profileImgUrl" column="profile_img_url"/>
        <result property="createdAt" column="created_at"/>
        <result property="jobCode" column="job_code"/>
        <result property="jobDetailCode" column="job_detail_code"/>
        <result property="experienceType" column="experience_type"/>
        <result property="educationLevel" column="education_level"/>
        <result property="educationStatus" column="education_status"/>
        <result property="providerId" column="provider_id"/>
    </resultMap>

    <insert id="saveEmail">
        INSERT INTO user (email,
                          password)
        VALUES (#{email},
                #{password})
    </insert>
    <insert id="saveSocial">
        INSERT INTO user (email,
                          name,
                          birthday,
                          created_at,
                          profile_img_url,
                          provider_id)
        VALUES (#{email},
                #{name},
                #{birthday},
                now(),
                #{profileImgUrl},
                #{providerId})
    </insert>

    <update id="updateCreatedAtByEmail">
        UPDATE user
        SET created_at = now()
        WHERE email = #{email}
    </update>
    <update id="updateSocialByEmail">
        UPDATE user
        SET provider_id = #{providerId},
        Name = #{name}
        <if test="birthday != null">
            , birthday = #{birthday}
        </if>
        , profile_img_url = #{profileImgUrl}
        WHERE email = #{email}
    </update>
    <update id="initProfile">
        UPDATE user
        SET name                = #{name},
            birthday            = #{birthday},
            target_company_size = #{targetCompanySize},
            profile_img_url     = #{profileImgUrl},
            job_code            = #{jobCode},
            job_detail_code     = #{jobDetailCode},
            experience_type     = #{experienceType},
            education_level     = #{educationLevel},
            education_status    = #{educationStatus}
        WHERE id = #{id}
    </update>
    <update id="updateProfile">
        UPDATE user
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="targetCompanySize != null">target_company_size = #{targetCompanySize},</if>
            <if test="profileImgUrl != null">profile_img_url = #{profileImgUrl},</if>
            <if test="jobCode != null">job_code = #{jobCode},</if>
            <if test="jobDetailCode != null">job_detail_code = #{jobDetailCode},</if>
            <if test="experienceType != null">experience_type = #{experienceType},</if>
            <if test="educationLevel != null">education_level = #{educationLevel},</if>
            <if test="educationStatus != null">education_status = #{educationStatus},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="findById" resultMap="UserResultMap">
        select *
        from user
        where id = #{id}
    </select>

    <select id="existsByEmail" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE email = #{email}
    </select>

    <select id="findByEmail" resultMap="UserResultMap">
        SELECT *
        FROM user
        WHERE email = #{email}
    </select>

    <select id="findIdByEmail" resultType="java.lang.Long">
        SELECT id
        FROM user
        WHERE email = #{email}
    </select>

    <select id="findByProviderId" resultMap="UserResultMap">
        SELECT *
        FROM user
        WHERE provider_id = #{providerId}
    </select>
    <select id="existsJobById" resultType="java.lang.Boolean">
        SELECT count(*) > 0
        FROM user
        WHERE id = #{id}
        <!-- 프로필 설정시 추가될 값들 -->
          AND job_code IS NOT NULL
          AND job_detail_code IS NOT NULL
          AND experience_type IS NOT NULL
          AND education_status IS NOT NULL
          AND education_level IS NOT NULL
    </select>
    <select id="findProfileImgUrlById" resultType="java.lang.String">
        SELECT profile_img_url FROM user WHERE id = #{id}
    </select>

</mapper>